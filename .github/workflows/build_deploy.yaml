name: Continuous Integration and Deployment of B2AI Peds Protocol

on:
  push:
    branches: [ main, alistair/fix_deployment ]
  pull_request:
    branches: [ main ]

# Allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROTOCOL_COMBINED_SLUG: peds-protocol-combined
      PROTOCOL_QUESTIONNAIRES_SLUG: peds-protocol-questionnaires

    steps:
    
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21.x'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: sudo apt-get install jq

    - name: Read Checksum from config.env
      run: |
        source config.env
        echo "LATEST_COMMIT_HASH=${REPROSCHEMA_UI_CHECKSUM}" >> $GITHUB_ENV

    - name: Install Node dependencies and validate JSON
      run: |
        npm install -g jsonlint
        # Validate JSON files for both protocols
        find . -name "*.json" -path "./peds-protocol-*" | xargs -I {} jsonlint -q {}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install reproschema>=0.1.0 requests_cache>=1.0.0 pre-commit>=3.0.0
    
    - name: Test with pyshacl
      run: |
        # Validate both protocol schemas
        reproschema -l DEBUG validate ${PROTOCOL_COMBINED_SLUG}/activities
        reproschema -l DEBUG validate ${PROTOCOL_COMBINED_SLUG}/peds-protocol/peds-protocol
        reproschema -l DEBUG validate ${PROTOCOL_QUESTIONNAIRES_SLUG}/activities
        reproschema -l DEBUG validate ${PROTOCOL_QUESTIONNAIRES_SLUG}/peds-protocol/peds-protocol

    - name: Cache reproschema-ui zip
      id: ui-cache
      uses: actions/cache@v4
      with:
        path: ${{ env.LATEST_COMMIT_HASH }}.zip
        key: reproschema-ui-${{ env.LATEST_COMMIT_HASH }}

    - name: Download reproschema-ui zip if not cached
      if: steps.ui-cache.outputs.cache-hit != 'true'
      run: |
        curl -O -sSL https://github.com/ReproNim/reproschema-ui/archive/${LATEST_COMMIT_HASH}.zip

    - name: Build Combined Protocol UI
      run: |
        # Setup UI for combined protocol
        unzip ${LATEST_COMMIT_HASH}.zip
        mv reproschema-ui-* ui-combined
        cd ui-combined
        cp -r ../${PROTOCOL_COMBINED_SLUG}/ui-changes/. .
        # Modify the title in index.html
        sed -i 's/<title>.*<\/title>/<title>B2AI Peds Protocol - Combined<\/title>/' public/index.html
        npm install
        npm run build
        cd ..

    - name: Build Questionnaires Protocol UI
      run: |
        # Setup UI for questionnaires protocol  
        unzip ${LATEST_COMMIT_HASH}.zip
        mv reproschema-ui-* ui-questionnaires
        cd ui-questionnaires
        cp -r ../${PROTOCOL_QUESTIONNAIRES_SLUG}/ui-changes/. .
        # Modify the title in index.html
        sed -i 's/<title>.*<\/title>/<title>B2AI Peds Protocol - Questionnaires<\/title>/' public/index.html
        npm install
        npm run build
        cd ..

    - name: Prepare deployment folder
      run: |
        # Create deployment folder structure
        mkdir -p deploy
        mkdir -p deploy/combined
        mkdir -p deploy/questionnaires
        
        # Copy built UIs to respective folders
        cp -r ui-combined/dist/* deploy/combined/
        cp -r ui-questionnaires/dist/* deploy/questionnaires/
        
        # Copy landing page
        cp index.html deploy/
        
        # Add .nojekyll to prevent Jekyll processing
        touch deploy/.nojekyll

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: deploy

  deploy:
    # Only run deploy job on main branch
    # if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write

    steps:
    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4