name: Build and deploy pediatric protocol to GitHub pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

permissions:
  contents: read

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  PROTOCOL_COMBINED_SLUG: peds-protocol-combined
  PROTOCOL_QUESTIONNAIRES_SLUG: peds-protocol-questionnaires

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Setup environment
      uses: actions/setup-node@v4
      with:
        node-version: '21.x'
        
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        # System dependencies
        sudo apt-get install -y jq
        
        # Node dependencies
        npm install -g jsonlint
        
        # Python dependencies
        python -m pip install --upgrade pip setuptools
        pip install reproschema>=0.1.0 requests_cache>=1.0.0 pre-commit>=3.0.0

    - name: Load configuration
      run: |
        # Load reproschema-ui version
        source config.env
        echo "LATEST_COMMIT_HASH=${REPROSCHEMA_UI_CHECKSUM}" >> $GITHUB_ENV

    - name: Update protocol commit in config files
      run: |
        chmod +x .github/scripts/update-protocol-commit.sh
        PR_HEAD_SHA="${{ github.event.pull_request.head.sha }}" \
        GITHUB_SHA="${{ github.sha }}" \
        GITHUB_EVENT_NAME="${{ github.event_name }}" \
        .github/scripts/update-protocol-commit.sh

    - name: Validate protocols
      run: |
        # Validate JSON syntax
        find . -name "*.json" -path "./peds-protocol-*" | xargs -I {} jsonlint -q {}
        
        # Validate with reproschema
        for protocol in ${PROTOCOL_COMBINED_SLUG} ${PROTOCOL_QUESTIONNAIRES_SLUG}; do
          echo "Validating $protocol..."
          reproschema -l DEBUG validate ${protocol}/activities
          reproschema -l DEBUG validate ${protocol}/peds-protocol/peds-protocol
        done

    - name: Cache reproschema-ui
      id: ui-cache
      uses: actions/cache@v4
      with:
        path: ${{ env.LATEST_COMMIT_HASH }}.zip
        key: reproschema-ui-${{ env.LATEST_COMMIT_HASH }}

    - name: Download reproschema-ui
      if: steps.ui-cache.outputs.cache-hit != 'true'
      run: |
        curl -O -sSL https://github.com/ReproNim/reproschema-ui/archive/${LATEST_COMMIT_HASH}.zip

    - name: Build protocols
      run: |
        chmod +x .github/scripts/build-protocol.sh
        
        # Build combined protocol
        .github/scripts/build-protocol.sh \
          "${PROTOCOL_COMBINED_SLUG}" \
          "B2AI Peds Protocol - Combined" \
          "${LATEST_COMMIT_HASH}"
        
        # Build questionnaires protocol
        .github/scripts/build-protocol.sh \
          "${PROTOCOL_QUESTIONNAIRES_SLUG}" \
          "B2AI Peds Protocol - Questionnaires" \
          "${LATEST_COMMIT_HASH}"

    - name: Prepare deployment
      run: |
        # Create deployment structure
        mkdir -p deploy/{combined,questionnaires}
        
        # Copy built UIs
        cp -r ui-${PROTOCOL_COMBINED_SLUG}/dist/* deploy/combined/
        cp -r ui-${PROTOCOL_QUESTIONNAIRES_SLUG}/dist/* deploy/questionnaires/
        
        # Copy landing page and add Jekyll bypass
        cp index.html deploy/
        touch deploy/.nojekyll

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: deploy

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    permissions:
      pages: write
      id-token: write

    steps:
    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4